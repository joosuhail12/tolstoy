name: CLI CI

on:
  push:
    paths:
      - 'cli/**'
      - '.github/workflows/cli-ci.yml'
  pull_request:
    paths:
      - 'cli/**'
      - '.github/workflows/cli-ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 21]
        
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build CLI
        run: npm run build

      - name: Test CLI binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          node dist/cli.js --version
          node dist/cli.js --help

      - name: Test CLI binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          node dist/cli.js --version
          node dist/cli.js --help

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript
        run: npx tsc --noEmit

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run license check
        run: npx license-checker --summary

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: cli
          directory: ./cli/coverage

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Test package installation
        run: |
          npm pack
          cd /tmp
          npm install $GITHUB_WORKSPACE/cli/tolstoy-cli-*.tgz
          npx tolstoy --version
          npx tolstoy --help

      - name: Test binary generation
        run: |
          npm install -g pkg
          node scripts/build-binaries.js
          ls -la dist-binaries/