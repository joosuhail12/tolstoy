name: CLI Release

on:
  push:
    tags:
      - 'v*'
    paths:
      - 'cli/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string

jobs:
  test:
    name: Test CLI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build CLI
        run: npm run build

  build-binaries:
    name: Build Binaries
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: node18-linux-x64
            platform: linux-x64
          - os: macos-latest
            target: node18-macos-x64
            platform: macos-x64
          - os: macos-latest
            target: node18-macos-arm64
            platform: macos-arm64
          - os: windows-latest
            target: node18-win-x64
            platform: windows-x64

    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build

      - name: Install pkg
        run: npm install -g pkg

      - name: Build binary
        run: |
          mkdir -p dist-binaries/${{ matrix.platform }}
          pkg dist/cli.js --target ${{ matrix.target }} --output dist-binaries/${{ matrix.platform }}/tolstoy${{ matrix.os == 'windows-latest' && '.exe' || '' }}

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist-binaries
          7z a tolstoy-cli-${{ matrix.platform }}.zip ${{ matrix.platform }}

      - name: Create archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd dist-binaries
          tar -czf tolstoy-cli-${{ matrix.platform }}.tar.gz ${{ matrix.platform }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: tolstoy-cli-${{ matrix.platform }}
          path: cli/dist-binaries/tolstoy-cli-${{ matrix.platform }}.*

  publish-npm:
    name: Publish to npm
    needs: [test, build-binaries]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cli/package-lock.json
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    needs: [publish-npm]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version changes from git commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            CHANGES=$(git log --pretty=format:"- %s" ${LAST_TAG}..HEAD --grep="^feat" --grep="^fix" --grep="^chore" --no-merges)
          else
            CHANGES="Initial release"
          fi
          
          # Write to file to handle multiline output
          cat > changelog.md << EOF
          ## Changes
          
          $CHANGES
          
          ## Installation
          
          ### npm
          \`\`\`bash
          npm install -g @tolstoy/cli@${{ steps.get_version.outputs.version }}
          \`\`\`
          
          ### Homebrew (macOS/Linux)
          \`\`\`bash
          brew tap tolstoy-dev/tap
          brew install tolstoy
          \`\`\`
          
          ### Direct Download
          Download the appropriate binary for your platform from the assets below.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Tolstoy CLI v${{ steps.get_version.outputs.version }}
          body_path: changelog.md
          files: |
            ./artifacts/tolstoy-cli-linux-x64/*
            ./artifacts/tolstoy-cli-macos-x64/*
            ./artifacts/tolstoy-cli-macos-arm64/*
            ./artifacts/tolstoy-cli-windows-x64/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: [create-github-release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update Homebrew Tap
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          tap: tolstoy-dev/homebrew-tap
          formula: tolstoy
          tag: v${{ steps.get_version.outputs.version }}
          revision: ${{ github.sha }}