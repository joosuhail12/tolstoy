name: Stainless SDK Generation

on:
  pull_request:
    paths:
      - 'docs/openapi.json'
      - 'stainless.yml'
  push:
    branches:
      - main
    paths:
      - 'docs/openapi.json'
      - 'stainless.yml'

env:
  STAINLESS_PROJECT: tolstoy-api
  OAS_PATH: docs/openapi.json

jobs:
  preview:
    # Run preview builds on PRs (but not when PR is closed)
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Generate OpenAPI spec
        run: |
          npm ci
          npm run build
          npm run generate-openapi || echo "OpenAPI generation failed, using existing spec"
          
      - name: Validate OpenAPI spec
        run: |
          if [ ! -f "${{ env.OAS_PATH }}" ]; then
            echo "❌ OpenAPI spec not found at ${{ env.OAS_PATH }}"
            exit 1
          fi
          echo "✅ OpenAPI spec found, size: $(wc -c < ${{ env.OAS_PATH }}) bytes"
          
      - name: Run preview builds
        uses: stainless-api/upload-openapi-spec-action@v1
        with:
          stainless_api_key: ${{ secrets.STAINLESS_TOKEN }}
          input_path: ${{ env.OAS_PATH }}
          project_name: ${{ env.STAINLESS_PROJECT }}
          branch: preview

  merge:
    # Run builds when PRs that modify OpenAPI spec are merged to main
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Generate OpenAPI spec
        run: |
          npm ci
          npm run build
          npm run generate-openapi || echo "OpenAPI generation failed, using existing spec"
          
      - name: Validate OpenAPI spec
        run: |
          if [ ! -f "${{ env.OAS_PATH }}" ]; then
            echo "❌ OpenAPI spec not found at ${{ env.OAS_PATH }}"
            exit 1
          fi
          echo "✅ OpenAPI spec found, size: $(wc -c < ${{ env.OAS_PATH }}) bytes"
          
      - name: Run merge build
        uses: stainless-api/upload-openapi-spec-action@v1
        with:
          stainless_api_key: ${{ secrets.STAINLESS_TOKEN }}
          input_path: ${{ env.OAS_PATH }}
          project_name: ${{ env.STAINLESS_PROJECT }}
          branch: main
          commit_message: "feat: merged PR with OpenAPI spec updates"

  push:
    # Run builds when changes are pushed directly to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Generate OpenAPI spec
        run: |
          npm ci
          npm run build
          npm run generate-openapi || echo "OpenAPI generation failed, using existing spec"
          
      - name: Validate OpenAPI spec
        run: |
          if [ ! -f "${{ env.OAS_PATH }}" ]; then
            echo "❌ OpenAPI spec not found at ${{ env.OAS_PATH }}"
            exit 1
          fi
          echo "✅ OpenAPI spec found, size: $(wc -c < ${{ env.OAS_PATH }}) bytes"
          jq empty "${{ env.OAS_PATH }}" && echo "✅ Valid JSON" || (echo "❌ Invalid JSON" && exit 1)
          
      - name: Run push build
        uses: stainless-api/upload-openapi-spec-action@v1
        with:
          stainless_api_key: ${{ secrets.STAINLESS_TOKEN }}
          input_path: ${{ env.OAS_PATH }}
          project_name: ${{ env.STAINLESS_PROJECT }}
          branch: main
          commit_message: "feat: update OpenAPI spec from commit ${{ github.sha }}"