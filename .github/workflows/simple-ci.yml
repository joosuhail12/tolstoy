name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Quality Checks & Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npx eslint "src/**/*.ts"
      - run: npx tsc --noEmit  
      - run: npx prettier --check "src/**/*.ts"
      - run: npm run build
      - run: echo "‚úÖ All quality checks passed!"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > ssh_key.pem
          chmod 600 ssh_key.pem

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}" << 'EOF'
            set -e
            cd /home/ubuntu/tolstoy
            
            echo "üì• Pulling latest code..."
            git pull origin main
            
            echo "üì¶ Installing dependencies..."
            npm ci --production=false
            
            echo "‚öôÔ∏è Generating Prisma client..."
            npm run db:generate || echo "Prisma generate skipped"
            
            echo "üî® Building application..."
            npm run build
            
            echo "üîÑ Restarting PM2..."
            pm2 stop tolstoy-api 2>/dev/null || true
            pm2 delete tolstoy-api 2>/dev/null || true
            
            # Start with proper environment
            pm2 start dist/main.js --name tolstoy-api \
              --env NODE_ENV=production \
              --env PORT=3000 \
              --env AWS_REGION=us-east-1 \
              --env AWS_SECRET_NAME=tolstoy/env \
              --env USE_AWS_SECRETS=true
            
            pm2 save
            
            echo "‚úÖ Deployment completed!"
          EOF

      - name: Health check
        run: |
          echo "‚è≥ Waiting for application to start..."
          sleep 20
          
          echo "üè• Health check..."
          for i in {1..6}; do
            echo "Attempt $i/6..."
            if curl -f --connect-timeout 10 --max-time 30 http://${{ secrets.EC2_HOST }}/health; then
              echo "‚úÖ Health check passed!"
              exit 0
            fi
            
            if [ $i -lt 6 ]; then
              echo "‚è≥ Waiting 10 seconds before retry..."
              sleep 10
            fi
          done
          
          echo "‚ùå Health check failed after 6 attempts"
          echo "üîç Checking server status..."
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}" "pm2 status && pm2 logs tolstoy-api --lines 20" || true
          exit 1

      - name: Cleanup
        if: always()
        run: rm -f ssh_key.pem