name: Smoke Tests

on:
  workflow_run:
    workflows: ["Deploy to Production"]
    types: [completed]
  workflow_dispatch: # Allow manual triggering
    inputs:
      environment:
        description: 'Environment to test against'
        required: true
        default: 'production'
        type: choice
        options:
          - staging
          - production
  schedule:
    # Run smoke tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    
    strategy:
      matrix:
        environment: 
          - ${{ github.event.inputs.environment || 'production' }}
    
    environment: ${{ matrix.environment }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Wait for deployment to be ready
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          
          # Health check with retry
          for i in {1..10}; do
            if curl -f "$SMOKE_API_URL/health" > /dev/null 2>&1; then
              echo "API is ready!"
              break
            fi
            echo "Attempt $i: API not ready, waiting 10 seconds..."
            sleep 10
            if [ $i -eq 10 ]; then
              echo "API failed to become ready after 100 seconds"
              exit 1
            fi
          done
        env:
          SMOKE_API_URL: ${{ secrets.SMOKE_API_URL }}

      - name: Run Smoke Tests
        run: yarn test:smoke
        env:
          SMOKE_API_URL: ${{ secrets.SMOKE_API_URL }}
          SMOKE_API_KEY: ${{ secrets.SMOKE_API_KEY }}
          SMOKE_ORG_ID: ${{ secrets.SMOKE_ORG_ID }}
          TOLSTOY_API_URL: ${{ secrets.SMOKE_API_URL }}
          TOLSTOY_API_KEY: ${{ secrets.SMOKE_API_KEY }}
          NODE_ENV: production

      - name: Generate Test Report
        if: always()
        run: |
          echo "# Smoke Test Results" > smoke-test-report.md
          echo "**Environment:** ${{ matrix.environment }}" >> smoke-test-report.md
          echo "**API URL:** $SMOKE_API_URL" >> smoke-test-report.md
          echo "**Timestamp:** $(date -u)" >> smoke-test-report.md
          echo "**Git SHA:** $GITHUB_SHA" >> smoke-test-report.md
          echo "" >> smoke-test-report.md
          
          if [ -f "test-results.xml" ]; then
            echo "**Test Results:** Available in artifacts" >> smoke-test-report.md
          fi
          
          echo "**Status:** ${{ job.status }}" >> smoke-test-report.md
        env:
          SMOKE_API_URL: ${{ secrets.SMOKE_API_URL }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results-${{ matrix.environment }}
          path: |
            smoke-test-report.md
            coverage/
          retention-days: 30

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const { SMOKE_API_URL } = process.env;
            const environment = '${{ matrix.environment }}';
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸš¨ Smoke Tests Failed - ${environment}`,
              body: `
              ## Smoke Test Failure
              
              **Environment:** ${environment}
              **API URL:** ${SMOKE_API_URL}
              **Workflow:** ${context.workflow}
              **Run ID:** ${context.runId}
              **Commit:** ${context.sha}
              
              The automated smoke tests failed after deployment. Please investigate immediately.
              
              **Check the workflow logs:** ${context.payload.repository.html_url}/actions/runs/${context.runId}
              
              ### Immediate Actions:
              1. Check application logs for errors
              2. Verify database connectivity
              3. Confirm all services are running
              4. Review recent deployment changes
              
              /cc @engineering-team
              `,
              labels: ['bug', 'smoke-test-failure', 'urgent', environment]
            });
        env:
          SMOKE_API_URL: ${{ secrets.SMOKE_API_URL }}

  integration-health-check:
    runs-on: ubuntu-latest
    needs: smoke-tests
    if: success()
    
    steps:
      - name: Post-Test Integration Check
        run: |
          echo "âœ… Smoke tests passed successfully"
          echo "ðŸš€ Deployment is healthy and ready for traffic"
          
          # Optional: Update deployment status or notify monitoring systems
          curl -X POST "$SLACK_WEBHOOK_URL" \
            -H 'Content-type: application/json' \
            --data '{
              "text": "âœ… Smoke tests passed for production deployment",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Tolstoy Smoke Tests* âœ…\n\nâ€¢ All critical functionality verified\nâ€¢ API endpoints responding correctly\nâ€¢ Template system working\nâ€¢ Metrics collection active\n\n*Environment:* Production\n*Commit:* `${{ github.sha }}`"
                  }
                }
              ]
            }' || echo "Slack notification failed (webhook not configured)"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}